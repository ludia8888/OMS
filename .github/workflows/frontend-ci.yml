name: Frontend CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'worktrees/frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'worktrees/frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  quality-check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: worktrees/frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: worktrees/frontend/package-lock.json
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Type check
        run: npm run type-check
        
      - name: Lint check
        run: npm run lint
        
      - name: Format check
        run: npm run format:check
        
      - name: Run tests with coverage
        run: npm run test:coverage
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ./worktrees/frontend/coverage
          flags: frontend
          name: frontend-coverage
          
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: worktrees/frontend
          
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: worktrees/frontend
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: worktrees/frontend/package-lock.json
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Security audit
        run: npm audit --audit-level=moderate
        
      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./worktrees/frontend
          
  build:
    name: Build
    needs: [quality-check, security-check]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: worktrees/frontend
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: worktrees/frontend/package-lock.json
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: worktrees/frontend/dist
          
  bundle-analysis:
    name: Bundle Size Analysis
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: worktrees/frontend
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: worktrees/frontend/dist
          
      - name: Analyze bundle size
        uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: worktrees/frontend